---
import PageLayout from "@layouts/PageLayout.astro"
import TopLayout from "@layouts/TopLayout.astro"
import BottomLayout from "@layouts/BottomLayout.astro"
import Blog from "@components/Blog"
import ErrorState from "@components/ErrorState"
import { BLOG } from "@consts"
import { getAllPosts } from "@lib/wordpress"
import { transformWordPressPost } from "@lib/transformers"
import type { TransformedPost } from "@lib/transformers"

let posts: TransformedPost[] = [];
let error: string | null = null;

try {
  const wpPosts = await getAllPosts();
  posts = wpPosts.map(transformWordPressPost);
} catch (e) {
  error = e instanceof Error ? e.message : 'Failed to load posts';
}

const tags = error ? [] : [...new Set(posts.flatMap(post => post.data.tags))].sort();
---

<PageLayout title={BLOG.TITLE} description={BLOG.DESCRIPTION}>
  <TopLayout>
    <div class="animate page-heading">
      {BLOG.TITLE}
    </div>
  </TopLayout>
  <BottomLayout>
    <div class="animate">
      {error ? (
        <ErrorState message={error} />
      ) : (
        <Blog client:load tags={tags} data={posts} />
      )}
    </div>
  </BottomLayout>
</PageLayout>